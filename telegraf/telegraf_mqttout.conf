[global_tags]
  # region = "apse1"

[agent]
  interval = "10s"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_interval = "10s"
  flush_jitter = "0s"
  precision = ""
  # debug = false
  # quiet = false
  # logtarget = "file"
  # logfile = ""
  # logfile_rotation_interval = "0d"
  # logfile_rotation_max_size = "0MB"
  # logfile_rotation_max_archives = 5
  # log_with_timezone = "Asia/Tokyo"
  hostname = "$ROUTER_NAME"
  omit_hostname = false

[[outputs.mqtt]]
  servers = ["192.168.1.80:1883"]
  topic_prefix = "telegraf"
  qos = 0
  username = "$USER"
  password = "$PASSWORD"
  data_format = "influx"
  # keep_alive = 0
  # client_id = ""
  # timeout = "5s"

  ## Optional TLS Config
  # tls_ca = "/etc/telegraf/ca.pem"
  # tls_cert = "/etc/telegraf/cert.pem"
  # tls_key = "/etc/telegraf/key.pem"

  ## Use TLS but skip chain & host verification
  # insecure_skip_verify = false  

##### SEMPv1 INPUT #####
# show disk details (appliance)
[[inputs.http]]
  urls = [
    "$URL/SEMP"
  ]
  username = "$USER"
  password = "$PASSWORD"
  body = "<rpc><show><disk><detail/></disk></show></rpc>"
  insecure_skip_verify = true

  timeout = "5s"
  success_status_codes = [200]
  data_format = "xml"

  [[inputs.http.xpath]]
    metric_selection = "/rpc-reply/rpc/show/disk/disk-infos/child::disk-info"
    metric_name = "string('disk_detail')"
    
    [inputs.http.xpath.tags]
      mounted-on="mounted-on"
      
    [inputs.http.xpath.fields_int]
      blocks="blocks"
      used="used"
      available="available"

    [inputs.http.xpath.fields]
      use="number(substring-before(use,'%'))"

#show memory
[[inputs.http]]
  urls = [
    "$URL/SEMP"
  ]
  username = "$USER"
  password = "$PASSWORD"
  body = "<rpc><show><memory/></show></rpc>"
  insecure_skip_verify = true

  timeout = "5s"
  success_status_codes = [200]
  data_format = "xml"

  [[inputs.http.xpath]]
    metric_selection = "/rpc-reply/rpc/show/descendant::memory"
    metric_name = "string('memory')"
    
    #[inputs.http.xpath.tags]
      
    [inputs.http.xpath.fields_int]
      total-in-kb="physical-memory/memory-info/total-in-kb"
      used-in-kb="physical-memory/memory-info/used-in-kb"
      free-in-kb="physical-memory/memory-info/free-in-kb"
      nab-buffer-load-factor="slot-infos/slot-info/nab-buffer-load-factor"

    [inputs.http.xpath.fields]
      physical-memory-usage-percent="number(physical-memory-usage-percent)"
      subscription-memory-usage-percent="subscription-memory-usage-percent"

#show system health (software)
[[inputs.http]]
  urls = [
    "$URL/SEMP"
  ]
  username = "$USER"
  password = "$PASSWORD"
  body = "<rpc><show><system><health/></system></show></rpc>"
  insecure_skip_verify = true

  timeout = "5s"
  success_status_codes = [200]
  data_format = "xml"

  [[inputs.http.xpath]]
    metric_selection = "/rpc-reply/rpc/show/system/child::health"
    metric_name = "string('system_health')"
    
    #[inputs.http.xpath.tags]
      
    [inputs.http.xpath.fields_int]
      disk-latency-average-value="disk-latency-average-value"
      disk-latency-current-value="disk-latency-current-value"
      compute-latency-average-value="compute-latency-average-value"
      compute-latency-current-value="compute-latency-current-value"
      network-latency-average-value="network-latency-average-value"
      network-latency-current-value="network-latency-current-value"
      mate-link-latency-average-value="mate-link-latency-average-value"
      mate-link-latency-current-value="mate-link-latency-current-value"

    #[inputs.http.xpath.fields]

#show storage element * (software)
[[inputs.http]]
  urls = [
    "$URL/SEMP"
  ]
  username = "$USER"
  password = "$PASSWORD"
  body = "<rpc><show><storage-element><pattern>*</pattern></storage-element></show></rpc>"
  insecure_skip_verify = true

  timeout = "5s"
  success_status_codes = [200]
  data_format = "xml"

  [[inputs.http.xpath]]
    metric_selection = "/rpc-reply/rpc/show/storage-element/child::storage-element"
    metric_name = "string('storage_element')"
    
    [inputs.http.xpath.tags]
      name="name"
      #path="path"

    [inputs.http.xpath.fields_int]
      used-blocks="used-blocks"
      available-blocks="available-blocks"
      event-threshold="event-threshold"

    [inputs.http.xpath.fields]
      used-percentage="number(used-percentage)"

#show interface
[[inputs.http]]
  urls = [
    "$URL/SEMP"
  ]
  username = "$USER"
  password = "$PASSWORD"
  body = "<rpc><show><interface/></show></rpc>"
  insecure_skip_verify = true

  timeout = "5s"
  success_status_codes = [200]
  data_format = "xml"

  [[inputs.http.xpath]]
    metric_selection = "/rpc-reply/rpc/show/interface/interfaces/descendant::interface"
    metric_name = "string('interface')"
    
    [inputs.http.xpath.tags]
      phy-interface="phy-interface"

    [inputs.http.xpath.fields_int]
      # rx-pkts="stats/rx-pkts"
      rx-bytes="stats/rx-bytes"
      # tx-pkts="stats/tx-pkts"
      tx-bytes="stats/tx-bytes"

    [inputs.http.xpath.fields]
      enabled="starts-with(enabled,'yes')"
      oper-status="starts-with(oper-status,'Up')"
      #Appliance
      eth-link-detected="starts-with(eth/link-detected,'yes')"
      #Software
      os-physical-link-detected="starts-with(os-physical/link-detected,'yes')"

#show stats client
[[inputs.http]]
  urls = [
    "$URL/SEMP"
  ]
  username = "$USER"
  password = "$PASSWORD"
  body = "<rpc><show><stats><client/></stats></show></rpc>"
  insecure_skip_verify = true

  timeout = "5s"
  success_status_codes = [200]
  data_format = "xml"

  [[inputs.http.xpath]]
    metric_selection = "/rpc-reply/rpc/show/stats/client/global/descendant::stats"
    metric_name = "string('global_stats')"
    
    # [inputs.http.xpath.tags]

    [inputs.http.xpath.fields_int]
      total-clients-connected="total-clients-connected"
      client-data-messages-received="client-data-messages-received"
      client-data-messages-sent="client-data-messages-sent"
      total-client-bytes-received="total-client-bytes-received"
      total-client-bytes-sent="total-client-bytes-sent"
      client-data-bytes-received="client-data-bytes-received"
      client-data-bytes-sent="client-data-bytes-sent"
      current-ingress-rate-per-second="current-ingress-rate-per-second"
      current-egress-rate-per-second="current-egress-rate-per-second"
      average-ingress-rate-per-minute="average-ingress-rate-per-minute"
      average-egress-rate-per-minute="average-egress-rate-per-minute"
      current-ingress-byte-rate-per-second="current-ingress-byte-rate-per-second"
      current-egress-byte-rate-per-second="current-egress-byte-rate-per-second"
      average-ingress-byte-rate-per-minute="average-ingress-byte-rate-per-minute"
      average-egress-byte-rate-per-minute="average-egress-byte-rate-per-minute"
      total-ingress-discards="ingress-discards/total-ingress-discards"
      total-egress-discards="egress-discards/total-egress-discards"
      
    # [inputs.http.xpath.fields]

#show message-vpn *
[[inputs.http]]
  urls = [
    "$URL/SEMP"
  ]
  username = "$USER"
  password = "$PASSWORD"
  body = "<rpc><show><message-vpn><vpn-name>*</vpn-name></message-vpn></show></rpc>"
  insecure_skip_verify = true

  timeout = "5s"
  success_status_codes = [200]
  data_format = "xml"

  [[inputs.http.xpath]]
    metric_selection = "/rpc-reply/rpc/show/message-vpn/child::vpn"
    metric_name = "string('vpn')"
    
    [inputs.http.xpath.tags]
      message-vpn="name"

    [inputs.http.xpath.fields_int]
      total-local-unique-subscriptions="total-local-unique-subscriptions"
      total-remote-unique-subscriptions="total-remote-unique-subscriptions"
      total-unique-subscriptions="total-unique-subscriptions"
      connections="connections"
      
    [inputs.http.xpath.fields]
      enabled="boolean(enabled='true')"
      operational="boolean(operational='true')"
      locally-configured="boolean(locally-configured='true')"
      local-status="local-status"

#show message-vpn * stats
[[inputs.http]]
  urls = [
    "$URL/SEMP"
  ]
  username = "$USER"
  password = "$PASSWORD"
  body = "<rpc><show><message-vpn><vpn-name>*</vpn-name><stats/></message-vpn></show></rpc>"
  insecure_skip_verify = true

  timeout = "5s"
  success_status_codes = [200]
  data_format = "xml"

  [[inputs.http.xpath]]
    metric_selection = "/rpc-reply/rpc/show/message-vpn/descendant::vpn[enabled='true']"
    metric_name = "string('vpn_stats')"
    
    [inputs.http.xpath.tags]
      message-vpn="name"

    [inputs.http.xpath.fields_int]
      unique-subscriptions="unique-subscriptions"
      connections="connections"
      connections-service-smf="connections-service-smf"
      connections-service-web="connections-service-web"
      connections-service-mqtt="connections-service-mqtt"
      connections-service-amqp="connections-service-amqp"
      connections-service-rest-incoming="connections-service-rest-incoming"
      connections-service-rest-outgoing="connections-service-rest-outgoing"
      total-client-messages-received="stats/total-client-messages-received"
      total-client-messages-sent="stats/total-client-messages-sent"
      client-data-messages-received="stats/client-data-messages-received"
      client-data-messages-sent="stats/client-data-messages-sent"
      client-data-bytes-received="stats/client-data-bytes-received"
      client-data-bytes-sent="stats/client-data-bytes-sent"
      current-ingress-rate-per-second="stats/current-ingress-rate-per-second"
      current-egress-rate-per-second="stats/current-egress-rate-per-second"
      average-ingress-rate-per-minute="stats/average-ingress-rate-per-minute"
      average-egress-rate-per-minute="stats/average-egress-rate-per-minute"
      current-ingress-byte-rate-per-second="stats/current-ingress-byte-rate-per-second"
      current-egress-byte-rate-per-second="stats/current-egress-byte-rate-per-second"
      average-ingress-byte-rate-per-minute="stats/average-ingress-byte-rate-per-minute"
      average-egress-byte-rate-per-minute="stats/average-egress-byte-rate-per-minute"
      total-ingress-discards="stats/ingress-discards/total-ingress-discards"
      total-egress-discards="stats/egress-discards/total-egress-discards"

    # [inputs.http.xpath.fields]
    #   operational="boolean(operational='true')"
    #   local-status="local-status"

#show message-spool
[[inputs.http]]
  urls = [
    "$URL/SEMP"
  ]
  username = "$USER"
  password = "$PASSWORD"
  body = "<rpc><show><message-spool/></show></rpc>"
  insecure_skip_verify = true

  timeout = "5s"
  success_status_codes = [200]
  data_format = "xml"

  [[inputs.http.xpath]]
    metric_selection = "/rpc-reply/rpc/show/message-spool/child::message-spool-info"
    metric_name = "string('message_spool')"
    
    #[inputs.http.xpath.tags]

    [inputs.http.xpath.fields_int]
      max-disk-usage="max-disk-usage"
      max-queue-messages="max-queue-messages"
      rfad-messages-currently-spooled="rfad-messages-currently-spooled"
      disk-messages-currently-spooled="disk-messages-currently-spooled"
      total-messages-currently-spooled="total-messages-currently-spooled"

    [inputs.http.xpath.fields]
      config-status="config-status"    
      operational-status="operational-status"
      datapath-up="boolean(datapath-up='true')"
      synchronization-status="synchronization-status"
      spool-sync-status="spool-sync-status"
      active-disk-partition-usage="active-disk-partition-usage"
      current-rfad-usage="number(current-rfad-usage)"
      current-disk-usage="number(current-disk-usage)"
      current-persist-usage="number(current-persist-usage)"

#show message-spool rates
[[inputs.http]]
  urls = [
    "$URL/SEMP"
  ]
  username = "$USER"
  password = "$PASSWORD"
  body = "<rpc><show><message-spool><rates/></message-spool></show></rpc>"
  insecure_skip_verify = true

  timeout = "5s"
  success_status_codes = [200]
  data_format = "xml"

  [[inputs.http.xpath]]
    metric_selection = "/rpc-reply/rpc/show/message-spool/message-spool-rates/descendant::message-vpn-spool-rates"
    metric_name = "string('message_spool_rates')"
    
    [inputs.http.xpath.tags]
      message-vpn="msg-vpn-name"

    [inputs.http.xpath.fields_int]
      current-ingress-byte-rate-per-second="qendpt-data-rates/current-ingress-byte-rate-per-second"
      current-ingress-rate-per-second="qendpt-data-rates/current-ingress-rate-per-second"
      current-egress-byte-rate-per-second="qendpt-data-rates/current-egress-byte-rate-per-second"
      current-egress-rate-per-second="qendpt-data-rates/current-egress-rate-per-second"
      average-ingress-byte-rate-per-minute="qendpt-data-rates/average-ingress-byte-rate-per-minute"
      average-ingress-rate-per-minute="qendpt-data-rates/average-ingress-rate-per-minute"
      average-egress-byte-rate-per-minute="qendpt-data-rates/average-egress-byte-rate-per-minute"
      average-egress-rate-per-minute="qendpt-data-rates/average-egress-rate-per-minute"

    #[inputs.http.xpath.fields]  

#show message-spool message-vpn *
[[inputs.http]]
  urls = [
    "$URL/SEMP"
  ]
  username = "$USER"
  password = "$PASSWORD"
  body = "<rpc><show><message-spool><vpn-name>*</vpn-name></message-spool></show></rpc>"
  insecure_skip_verify = true

  timeout = "5s"
  success_status_codes = [200]
  data_format = "xml"

  [[inputs.http.xpath]]
    metric_selection = "/rpc-reply/rpc/show/message-spool/message-vpn/child::vpn"
    metric_name = "string('message_spool_vpn')"
    
    [inputs.http.xpath.tags]
      message-vpn="name"

    [inputs.http.xpath.fields_int]
      current-messages-spooled="current-messages-spooled"

    [inputs.http.xpath.fields]
      current-spool-usage-mb="number(current-spool-usage-mb)"
      maximum-spool-usage-mb="number(maximum-spool-usage-mb)"

#show bridge *
[[inputs.http]]
  urls = [
    "$URL/SEMP"
  ]
  username = "$USER"
  password = "$PASSWORD"
  body = "<rpc><show><bridge><bridge-name-pattern>*</bridge-name-pattern></bridge></show></rpc>"
  insecure_skip_verify = true

  timeout = "5s"
  success_status_codes = [200]
  data_format = "xml"

  [[inputs.http.xpath]]
    metric_selection = "/rpc-reply/rpc/show/bridge/bridges/descendant::bridge"
    metric_name = "string('bridge')"
    
    [inputs.http.xpath.tags]
      message-vpn="local-vpn-name"
      bridge-name="bridge-name"
      connected-remote-vpn-name="connected-remote-vpn-name"
      connected-remote-router-name="connected-remote-router-name"

    [inputs.http.xpath.fields_int]
      connection-uptime-in-seconds="connection-uptime-in-seconds"
      
    [inputs.http.xpath.fields]
      admin-state="admin-state"
      inbound-operational-state="inbound-operational-state"
      outbound-operational-state="outbound-operational-state"
      queue-operational-state="queue-operational-state"

#show redundancy
[[inputs.http]]
  urls = [
    "$URL/SEMP"
  ]
  username = "$USER"
  password = "$PASSWORD"
  body = "<rpc><show><redundancy/></show></rpc>"
  insecure_skip_verify = true

  timeout = "5s"
  success_status_codes = [200]
  data_format = "xml"

  [[inputs.http.xpath]]
    metric_selection = "/rpc-reply/rpc/show/descendant::redundancy"
    metric_name = "string('redundancy')"
    
    [inputs.http.xpath.tags]
      active-standby-role="active-standby-role"
      mate-router-name="mate-router-name"
      
    #[inputs.http.xpath.fields_int]

    [inputs.http.xpath.fields]
      config-status="config-status"
      redundancy-status="redundancy-status"
      adb-link-up="boolean(oper-status/adb-link-up='true')"
      adb-hello-up="boolean(oper-status/adb-hello-up='true')"
      primary-status-activity="virtual-routers/primary/status/activity"
      backup-status-activity="virtual-routers/backup/status/activity"

#show config-sync
[[inputs.http]]
  urls = [
    "$URL/SEMP"
  ]
  username = "$USER"
  password = "$PASSWORD"
  body = "<rpc><show><config-sync><database/></config-sync></show></rpc>"
  insecure_skip_verify = true

  timeout = "5s"
  success_status_codes = [200]
  data_format = "xml"

  [[inputs.http.xpath]]
    metric_selection = "/rpc-reply/rpc/show/config-sync/database/local/tables/descendant::table"
    metric_name = "string('config_sync')"
    
    [inputs.http.xpath.tags]
      name="name"
      type="type"
      role="role"

    [inputs.http.xpath.fields_int]
      time-in-state-seconds="time-in-state-seconds"

    [inputs.http.xpath.fields]
      sync-state="sync-state"

#show replication
[[inputs.http]]
  urls = [
    "$URL/SEMP"
  ]
  username = "$USER"
  password = "$PASSWORD"
  body = "<rpc><show><replication><stats/></replication></show></rpc>"
  insecure_skip_verify = true

  timeout = "5s"
  success_status_codes = [200]
  data_format = "xml"

  [[inputs.http.xpath]]
    metric_selection = "/rpc-reply/rpc/show//descendant::replication"
    metric_name = "string('replication')"
    
    #[inputs.http.xpath.tags]

    [inputs.http.xpath.fields_int]
      sync-msgs-queued-to-standby="stats/active-stats/message-processing/sync-msgs-queued-to-standby"
      sync-msgs-queued-to-standby-as-async="stats/active-stats/message-processing/sync-msgs-queued-to-standby-as-async"
      async-msgs-queued-to-standby="stats/active-stats/message-processing/async-msgs-queued-to-standby"
      promoted-msgs-queued-to-standby="stats/active-stats/message-processing/promoted-msgs-queued-to-standby"
      pruned-locally-consumed-msgs="stats/active-stats/message-processing/pruned-locally-consumed-msgs"
      transitions-to-ineligible="stats/active-stats/sync-replication/transitions-to-ineligible"
      msgs-tx-to-standby="stats/active-stats/ack-propagation/msgs-tx-to-standby"
      rec-req-from-standby="stats/active-stats/ack-propagation/rec-req-from-standby"
      msgs-rx-from-active="stats/standby-stats/message-processing/msgs-rx-from-active"
      ack-prop-msgs-rx="stats/standby-stats/ack-propagation/ack-prop-msgs-rx"
      recon-req-tx="stats/standby-stats/ack-propagation/recon-req-tx"
      out-of-seq-rx="stats/standby-stats/ack-propagation/out-of-seq-rx"
      transaction-requests-success="stats/standby-stats/transaction-replication/transaction-requests-success"
      transaction-requests-success-prepare="stats/standby-stats/transaction-replication/transaction-requests-success-prepare"
      transaction-requests-success-commit="stats/standby-stats/transaction-replication/transaction-requests-success-commit"
      transaction-requests-success-rollback="stats/standby-stats/transaction-replication/transaction-requests-success-rollback"
      transaction-requests-fail="stats/standby-stats/transaction-replication/transaction-requests-fail"
      transaction-requests-fail-prepare="stats/standby-stats/transaction-replication/transaction-requests-fail-prepare"
      transaction-requests-fail-commit="stats/standby-stats/transaction-replication/transaction-requests-fail-commit"
      transaction-requests-fail-rollback="stats/standby-stats/transaction-replication/transaction-requests-fail-rollback"

    [inputs.http.xpath.fields]
      bridge-admin-state="config-sync/bridge/admin-state"
      bridge-state="config-sync/bridge/state"

#Expensive Request when there are lots of clients!
#show client * slow-subscriber
[[inputs.http]]
  urls = [
    "$URL/SEMP"
  ]
  username = "$USER"
  password = "$PASSWORD"
  body = "<rpc><show><client><name>*</name><slow-subscriber/></client></show></rpc>"
  insecure_skip_verify = true

  timeout = "5s"
  success_status_codes = [200]
  data_format = "xml"

  [[inputs.http.xpath]]
    metric_selection = "/rpc-reply/rpc/show/client/primary-virtual-router/descendant::client"
    metric_name = "string('client_slow_subscriber')"
    
    [inputs.http.xpath.tags]
      message-vpn="message-vpn"
      client-address="substring-before(client-address,':')"

    [inputs.http.xpath.fields_int]
      num-subscriptions="num-subscriptions"

    #[inputs.http.xpath.fields]

#Expensive Request when there are lots of clients!
#show client * subscriptions
[[inputs.http]]
  urls = [
    "$URL/SEMP"
  ]
  username = "$USER"
  password = "$PASSWORD"
  body = "<rpc><show><client><name>*</name><subscriptions/><connected/></client></show></rpc>"
  insecure_skip_verify = true

  timeout = "5s"
  success_status_codes = [200]
  data_format = "xml"

  [[inputs.http.xpath]]
    metric_selection = "/rpc-reply/rpc/show/client/primary-virtual-router/descendant::client[num-subscriptions>0]/subscription-entry"
    metric_name = "string('client_subscriptions')"
    
    [inputs.http.xpath.tags]
      message-vpn="../message-vpn"
      client-username="../client-username"
      client-address="substring-before(../client-address,':')"

    [inputs.http.xpath.fields_int]
      uptime-seconds="../uptime-seconds"

    [inputs.http.xpath.fields]
      subscription="subscription"

#Expensive Request when there are lots of queues!
#show queue *
[[inputs.http]]
  urls = [
    "$URL/SEMP"
  ]
  username = "$USER"
  password = "$PASSWORD"
  body = "<rpc><show><queue><name>*</name></queue></show></rpc>"
  insecure_skip_verify = true

  timeout = "5s"
  success_status_codes = [200]
  data_format = "xml"

  [[inputs.http.xpath]]
    metric_selection = "/rpc-reply/rpc/show/queue/queues/descendant::queue"
    metric_name = "string('queue')"
    
    [inputs.http.xpath.tags]
      message-vpn="info/message-vpn"
      queue-name="name"

    [inputs.http.xpath.fields_int]
      num-messages-spooled="info/num-messages-spooled"
      quota="info/quota"
      topic-subscription-count="info/topic-subscription-count"

    [inputs.http.xpath.fields]
      durable="boolean(info/durable='true')"
      current-spool-usage-in-mb="number(info/current-spool-usage-in-mb)"
